---
name: Lint and test

env:
  HUSKY: 0

# yamllint disable rule:truthy
on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [main]
  merge_group:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install Yarn
        run: |
          corepack enable
          yarn set version stable
      - name: Install dependencies
        run: yarn install
      - name: Lint
        run: yarn run lint

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Setup Yarn
        run: |
          corepack enable
          yarn set version stable
      - name: Install dependencies
        run: yarn install
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Display Python version
        run: python --version

      - name: Run tests on ubuntu-latest
        run: |
          sudo apt update && sudo apt install -y xvfb libasound2t64 libgbm1 libgtk-3-0t64 libnss3 > /dev/null 2>&1 || true
          xvfb-run -a yarn run test
        if: runner.os == 'Linux'

      - name: Run tests on windows-latest and macos-latest
        run: yarn run test
        if: runner.os != 'Linux'

  # https://github.com/marketplace/actions/alls-green#why
  alls-green: # This job does nothing and is only used for the branch protection
    name: All Good
    if: always()
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
