---
name: Lint and test (dev)

env:
  HUSKY: 0

# yamllint disable rule:truthy
on:
  pull_request:
    branches: [dev]
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches: [dev]
  merge_group:
  workflow_dispatch:

jobs:
  build-waldiez:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.waldiez-cache.outputs.cache-hit }}
    steps:
      - name: Get waldiez dev branch commit
        id: waldiez-commit
        run: |
          COMMIT=$(curl -s https://api.github.com/repos/waldiez/waldiez/commits/dev | jq -r '.sha[0:7]')
          echo "commit=$COMMIT" >> $GITHUB_OUTPUT

      - name: Cache waldiez build
        id: waldiez-cache
        uses: actions/cache@v4
        with:
          path: ./.local/waldiez-react.tgz
          key: waldiez-react-${{ steps.waldiez-commit.outputs.commit }}

      - name: Setup bun
        if: steps.waldiez-cache.outputs.cache-hit != 'true'
        uses: oven-sh/setup-bun@v2

      - name: Build waldiez
        if: steps.waldiez-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.local
          git clone --depth 1 --branch dev https://github.com/waldiez/waldiez.git
          cd waldiez
          bun install
          bun run build:lib
          bun run archive
          cp out/archive/waldiez-react-*.tgz ../.local/waldiez-react.tgz

      - name: Upload waldiez artifact
        uses: actions/upload-artifact@v4
        with:
          name: waldiez-react
          path: ./.local/waldiez-react.tgz
          retention-days: 1

  lint:
    runs-on: ubuntu-latest
    needs: build-waldiez
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
          key: yarn-lint-dev-${{ runner.os }}-${{ hashFiles('yarn.lock', 'package.json') }}
          restore-keys: |
            yarn-lint-dev-${{ runner.os }}-

      - name: Download waldiez artifact
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react
          path: .local

      - name: Move artifact to correct location
        run: |
          mv .local/waldiez-react.tgz .local/waldiez-react.tgz || echo "File already in place"
          ls -la .local/

      - name: Install Yarn and dependencies
        run: |
          corepack enable
          yarn set version stable
          yarn remove @waldiez/react || true
          yarn add @waldiez/react@file:./.local/waldiez-react.tgz
          yarn install --no-immutable

      - name: Lint
        run: yarn run lint

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    needs: build-waldiez
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache Yarn dependencies
        uses: actions/cache@v4
        with:
          path: |
            .yarn/cache
            .yarn/install-state.gz
          key: yarn-test-dev-${{ runner.os }}-${{ hashFiles('yarn.lock', 'package.json') }}
          restore-keys: |
            yarn-test-dev-${{ runner.os }}-

      - name: Download waldiez artifact
        uses: actions/download-artifact@v4
        with:
          name: waldiez-react
          path: .local

      - name: Move artifact to correct location
        run: |
          mv .local/waldiez-react.tgz .local/waldiez-react.tgz || echo "File already in place"
          ls -la .local/

      - name: Setup Yarn and dependencies
        run: |
          corepack enable
          yarn set version stable
          yarn remove @waldiez/react || true
          yarn add @waldiez/react@file:./.local/waldiez-react.tgz
          yarn install --no-immutable

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Display Python version
        run: python --version

      - name: Install waldiez python package from git
        run: |
          pip install --upgrade pip
          pip install git+https://github.com/waldiez/waldiez.git@dev

      - name: Run tests on ubuntu-latest
        run: |
          sudo apt update && sudo apt install -y xvfb libasound2t64 libgbm1 libgtk-3-0t64 libnss3 > /dev/null 2>&1 || true
          xvfb-run -a yarn run test
        if: runner.os == 'Linux'

      - name: Run tests on windows-latest and macos-latest
        run: yarn run test
        if: runner.os != 'Linux'
